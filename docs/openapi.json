{
  "openapi": "3.0.0",
  "paths": {
    "/api/cafes": {
      "get": {
        "description": "Find cafes within a specified radius of given coordinates",
        "operationId": "CafeController_getNearbyCafes",
        "parameters": [
          {
            "name": "lat",
            "required": true,
            "in": "query",
            "description": "Latitude",
            "schema": {
              "minimum": -90,
              "maximum": 90,
              "example": 37.7749,
              "type": "number"
            }
          },
          {
            "name": "lng",
            "required": true,
            "in": "query",
            "description": "Longitude",
            "schema": {
              "minimum": -180,
              "maximum": 180,
              "example": -122.4194,
              "type": "number"
            }
          },
          {
            "name": "radius",
            "required": true,
            "in": "query",
            "description": "Search radius in kilometers",
            "schema": {
              "minimum": 0.1,
              "maximum": 30,
              "default": 3,
              "example": 5,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved nearby cafes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CafeFullResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "code": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get nearby cafes",
        "tags": [
          "cafes"
        ]
      },
      "post": {
        "description": "Create a new cafe with location, seat availability, and store information",
        "operationId": "CafeController_createCafe",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCafeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created cafe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CafeFullResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "code": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Create a new cafe",
        "tags": [
          "cafes"
        ]
      }
    },
    "/api/cafes/{cafeId}": {
      "get": {
        "description": "Retrieve detailed information about a specific cafe",
        "operationId": "CafeController_getCafeById",
        "parameters": [
          {
            "name": "cafeId",
            "required": true,
            "in": "path",
            "description": "Cafe UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved cafe details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CafeFullResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get cafe by ID",
        "tags": [
          "cafes"
        ]
      },
      "put": {
        "description": "Update cafe information including location, seats, and store details (owner only)",
        "operationId": "CafeController_updateCafe",
        "parameters": [
          {
            "name": "cafeId",
            "required": true,
            "in": "path",
            "description": "Cafe UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCafeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated cafe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CafeFullResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "code": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "code": {
                      "type": "string",
                      "example": "FORBIDDEN"
                    },
                    "message": {
                      "type": "string",
                      "example": "Forbidden - not the resource owner"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update cafe",
        "tags": [
          "cafes"
        ]
      },
      "delete": {
        "description": "Delete a cafe from the system",
        "operationId": "CafeController_deleteCafe",
        "parameters": [
          {
            "name": "cafeId",
            "required": true,
            "in": "path",
            "description": "Cafe UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted cafe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Delete cafe",
        "tags": [
          "cafes"
        ]
      }
    },
    "/api/cafes/{cafeId}/seats-availability": {
      "get": {
        "description": "Retrieve current seat availability for a specific cafe",
        "operationId": "CafeController_getCafeSeatsById",
        "parameters": [
          {
            "name": "cafeId",
            "required": true,
            "in": "path",
            "description": "Cafe UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved seat availability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CafeSeatAvailabilityResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get cafe seat availability",
        "tags": [
          "cafes"
        ]
      },
      "put": {
        "description": "Update the current seat availability for a cafe (owner only)",
        "operationId": "CafeController_updateCafeSeatsById",
        "parameters": [
          {
            "name": "cafeId",
            "required": true,
            "in": "path",
            "description": "Cafe UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCafeSeatAvailabilityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated seat availability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CafeSeatAvailabilityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "code": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "code": {
                      "type": "string",
                      "example": "FORBIDDEN"
                    },
                    "message": {
                      "type": "string",
                      "example": "Forbidden - not the resource owner"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update cafe seat availability",
        "tags": [
          "cafes"
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "description": "Generate a new access token using a valid refresh token",
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/owners/{ownerId}": {
      "get": {
        "description": "Retrieve owner information and associated cafes",
        "operationId": "OwnerController_getOwnerById",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440001",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOwnerByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get owner by ID",
        "tags": [
          "owners"
        ]
      },
      "put": {
        "description": "Update owner information and associated cafes",
        "operationId": "OwnerController_updateOwner",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440001",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOwnerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerResponseWithTokens"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "code": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update owner",
        "tags": [
          "owners"
        ]
      },
      "delete": {
        "description": "Delete owner account and associated data",
        "operationId": "OwnerController_deleteOwner",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner UUID",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440001",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOwnerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Delete owner",
        "tags": [
          "owners"
        ]
      }
    },
    "/api/owners": {
      "post": {
        "description": "Register a new cafe owner account",
        "operationId": "OwnerController_createOwner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOwnerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Owner created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOwnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "code": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "code": {
                      "type": "string",
                      "example": "CONFLICT"
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner with email already exists"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create new owner",
        "tags": [
          "owners"
        ]
      }
    },
    "/api/owners/login": {
      "post": {
        "description": "Authenticate owner and receive access tokens",
        "operationId": "OwnerController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginOwnerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerResponseWithTokens"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "code": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized - invalid or missing JWT token"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Login owner",
        "tags": [
          "owners"
        ]
      }
    }
  },
  "info": {
    "title": "Cafe IT API",
    "description": "API for managing cafes and seat availability",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "owners",
      "description": "Owner management endpoints"
    },
    {
      "name": "cafes",
      "description": "Cafe management endpoints"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "OperatingHours": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Opening time in HH:mm format",
            "example": "09:00",
            "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$"
          },
          "endTime": {
            "type": "string",
            "description": "Closing time in HH:mm format",
            "example": "22:00",
            "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$"
          }
        },
        "required": [
          "startTime",
          "endTime"
        ]
      },
      "StoreLinks": {
        "type": "object",
        "properties": {
          "mapUrl": {
            "type": "string",
            "description": "Google Maps or similar map service URL",
            "example": "https://maps.google.com/maps?q=37.7749,-122.4194"
          }
        },
        "required": [
          "mapUrl"
        ]
      },
      "Amenities": {
        "type": "object",
        "properties": {
          "noiseLevel": {
            "type": "string",
            "description": "Noise level of the cafe",
            "example": "moderate",
            "enum": [
              "quiet",
              "moderate",
              "loud"
            ]
          },
          "hasWifi": {
            "type": "boolean",
            "description": "Whether the cafe has WiFi available",
            "example": true
          },
          "hasOutlets": {
            "type": "boolean",
            "description": "Whether the cafe has power outlets available",
            "example": true
          }
        },
        "required": [
          "noiseLevel",
          "hasWifi",
          "hasOutlets"
        ]
      },
      "StoreInformation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the cafe",
            "example": "Blue Bottle Coffee"
          },
          "address": {
            "type": "string",
            "description": "Physical address of the cafe",
            "example": "123 Main St, San Francisco, CA 94102"
          },
          "hours": {
            "description": "Operating hours for the cafe",
            "allOf": [
              {
                "$ref": "#/components/schemas/OperatingHours"
              }
            ]
          },
          "links": {
            "description": "External links for the cafe",
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreLinks"
              }
            ]
          },
          "amenities": {
            "description": "Available amenities at the cafe",
            "allOf": [
              {
                "$ref": "#/components/schemas/Amenities"
              }
            ]
          }
        },
        "required": [
          "name",
          "address",
          "hours",
          "links"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude coordinate",
            "example": 37.7749,
            "minimum": -90,
            "maximum": 90
          },
          "lng": {
            "type": "number",
            "description": "Longitude coordinate",
            "example": -122.4194,
            "minimum": -180,
            "maximum": 180
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "SeatAvailability": {
        "type": "object",
        "properties": {
          "totalSeats": {
            "type": "number",
            "description": "Total number of seats in the cafe",
            "example": 40,
            "minimum": 0
          },
          "availableSeats": {
            "type": "number",
            "description": "Number of currently available seats",
            "example": 15,
            "minimum": 0
          },
          "lastUpdated": {
            "type": "string",
            "description": "ISO timestamp of when seat availability was last updated",
            "example": "2024-01-15T10:30:00.000Z",
            "format": "date-time"
          }
        },
        "required": [
          "totalSeats",
          "availableSeats"
        ]
      },
      "CafeFullResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the cafe",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "format": "uuid"
          },
          "ownerId": {
            "type": "string",
            "description": "Unique identifier of the cafe owner",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          },
          "storeInformation": {
            "description": "Complete store information including name, address, and hours",
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreInformation"
              }
            ]
          },
          "location": {
            "description": "Geographic location of the cafe",
            "allOf": [
              {
                "$ref": "#/components/schemas/Location"
              }
            ]
          },
          "seatAvailability": {
            "description": "Current seat availability information",
            "allOf": [
              {
                "$ref": "#/components/schemas/SeatAvailability"
              }
            ]
          }
        },
        "required": [
          "id",
          "ownerId",
          "storeInformation",
          "location",
          "seatAvailability"
        ]
      },
      "CafeSeatAvailabilityResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the cafe",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "format": "uuid"
          },
          "seatAvailability": {
            "description": "Current seat availability information",
            "allOf": [
              {
                "$ref": "#/components/schemas/SeatAvailability"
              }
            ]
          }
        },
        "required": [
          "id",
          "seatAvailability"
        ]
      },
      "UpdateCafeSeatAvailabilityRequest": {
        "type": "object",
        "properties": {
          "totalSeats": {
            "type": "number",
            "description": "Total number of seats in the cafe",
            "example": 40,
            "minimum": 0
          },
          "availableSeats": {
            "type": "number",
            "description": "Number of currently available seats",
            "example": 15,
            "minimum": 0
          },
          "lastUpdated": {
            "type": "string",
            "description": "ISO timestamp of when seat availability was last updated",
            "example": "2024-01-15T10:30:00.000Z",
            "format": "date-time"
          },
          "ownerId": {
            "type": "string",
            "description": "Unique identifier of the cafe owner (must match the cafe's owner)",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          }
        },
        "required": [
          "totalSeats",
          "availableSeats",
          "ownerId"
        ]
      },
      "CreateCafeRequest": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Unique identifier of the cafe owner",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          },
          "location": {
            "description": "Geographic location of the cafe",
            "allOf": [
              {
                "$ref": "#/components/schemas/Location"
              }
            ]
          },
          "seatAvailability": {
            "description": "Current seat availability information",
            "allOf": [
              {
                "$ref": "#/components/schemas/SeatAvailability"
              }
            ]
          },
          "storeInformation": {
            "description": "Store information including name, address, and hours",
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreInformation"
              }
            ]
          }
        },
        "required": [
          "ownerId",
          "location",
          "seatAvailability",
          "storeInformation"
        ]
      },
      "UpdateCafeRequest": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Unique identifier of the cafe owner",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          },
          "location": {
            "description": "Geographic location of the cafe",
            "allOf": [
              {
                "$ref": "#/components/schemas/Location"
              }
            ]
          },
          "seatAvailability": {
            "description": "Current seat availability information",
            "allOf": [
              {
                "$ref": "#/components/schemas/SeatAvailability"
              }
            ]
          },
          "storeInformation": {
            "description": "Store information including name, address, and hours",
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreInformation"
              }
            ]
          }
        },
        "required": [
          "ownerId",
          "location",
          "seatAvailability",
          "storeInformation"
        ]
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Token expiration time in seconds",
            "example": 900
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "expiresIn"
        ]
      },
      "GetOwnerByIdResponse": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Unique identifier of the cafe owner",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Owner email address",
            "example": "owner@example.com"
          },
          "cafeIds": {
            "description": "Array of cafe UUIDs owned by this owner",
            "example": [
              "550e8400-e29b-41d4-a716-446655440000",
              "550e8400-e29b-41d4-a716-446655440001"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ownerId",
          "email",
          "cafeIds"
        ]
      },
      "CreateOwnerRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Owner email address",
            "example": "owner@example.com"
          },
          "password": {
            "type": "string",
            "description": "Owner password",
            "example": "securePassword123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateOwnerResponse": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Unique identifier of the cafe owner",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Owner email address",
            "example": "owner@example.com"
          },
          "cafeIds": {
            "description": "Array of cafe UUIDs owned by this owner",
            "example": [
              "550e8400-e29b-41d4-a716-446655440000",
              "550e8400-e29b-41d4-a716-446655440001"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessToken": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Token expiration time in seconds",
            "example": 900
          }
        },
        "required": [
          "ownerId",
          "email",
          "cafeIds",
          "accessToken",
          "refreshToken",
          "expiresIn"
        ]
      },
      "LoginOwnerRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Owner email address",
            "example": "owner@example.com"
          },
          "password": {
            "type": "string",
            "description": "Owner password",
            "example": "securePassword123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "OwnerResponseWithTokens": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Unique identifier of the cafe owner",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Owner email address",
            "example": "owner@example.com"
          },
          "cafeIds": {
            "description": "Array of cafe UUIDs owned by this owner",
            "example": [
              "550e8400-e29b-41d4-a716-446655440000",
              "550e8400-e29b-41d4-a716-446655440001"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accessToken": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Token expiration time in seconds",
            "example": 900
          }
        },
        "required": [
          "ownerId",
          "email",
          "cafeIds",
          "accessToken",
          "refreshToken",
          "expiresIn"
        ]
      },
      "UpdateOwnerRequest": {
        "type": "object",
        "properties": {
          "cafeIds": {
            "description": "Array of cafe UUIDs owned by this owner",
            "example": [
              "550e8400-e29b-41d4-a716-446655440000",
              "550e8400-e29b-41d4-a716-446655440001"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "cafeIds"
        ]
      },
      "DeleteOwnerResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the deletion was successful",
            "example": true
          }
        },
        "required": [
          "success"
        ]
      }
    }
  }
}